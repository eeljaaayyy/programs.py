def create_password():
    password = input("Create a password: ")
    return password

def ask_question(question_number):
    questions = {
        1: "An instruction set that processes input, manipulates data, and outputs a result.\nAnswer: ",
        2: "The languages that are used to write a program or set of instructions.\nAnswer: ",
        3: "Writing instructions, statements, or commands that tell a computer how to process data.\nAnswer: ",
        4: "It is a language for simplifying and making readable machine code.\nAnswer: ",
        5: "The built-in function that is used to send data to the standard output device.\nAnswer: ",
        6: "The process of producing video games or other forms of entertainment software.\nAnswer: ",
        7: "Guido van Rossum developed the straightforward language in 1991. Because it is an interpreted language, it does not require compilation before usage.\nAnswer: ",
        8: "A program that converts a high-level language (such as C, C++, or Java) to a low-level language (object program or machine program).\nAnswer: ",
        9: "A name used to identify a variable, function, class, module or other object.\nAnswer: ",
        10: "Numeric values are stored in number data types. When you assign a value to a number object, it is generated.\nAnswer: "
    }

    true_or_false_questions = {
        11: "Keywords are reserved words that cannot be used as constant, variable, or identifier names.\nAnswer: ",
        12: "\"else\" is an example of a Python keyword.\nAnswer: ",
        13: "An identifier starts with a letter A to Z or a to z or an underscore (_) followed by zero or more letters, underscores, and digits (0 to 20).\nAnswer: ",
        14: "Python variables require an explicit declaration.\nAnswer: ",
        15: "Lists are the most versatile compound data type in Python.\nAnswer: ",
        16: "A tuple is a form of sequence data that is not comparable to a list.\nAnswer: ",
        17: "Dictionaries in Python are a form of hash table.\nAnswer: ",
        18: "Operators are constructs that can change the values of operands.\nAnswer: ",
        19: "\"is not\" evaluates to true if the variables on either side of the operator point to the same object and false otherwise.\nAnswer: ",
        20: "\"is\" evaluates to false if the variables on either side of the operator point to the same object and true otherwise.\nAnswer: "
    }

    if question_number in questions:
        print("Question", question_number)
        answer = input(questions[question_number])
    elif question_number in true_or_false_questions:
        print("Question", question_number)
        answer = input(true_or_false_questions[question_number])
    else:
        answer = None

    return answer

def main():
    password = create_password()
    if password == "mackenyu":
        for i in range(1, 21):
            answer = ask_question(i)
    else:
        print("Incorrect password. Access denied.")

if __name__ == "__main__":
    main()
    # Revealing correct answers
print("\nCorrect Answers:")
print("1. Program")
print("2. Programming languages")
print("3. Programming")
print("4. Assembly language")
print("5. print()")
print("6. Game development")
print("7. Python")
print("8. Compiler")
print("9. Identifier")
print("10. True")
print("11. True")
print("12. True")
print("13. True")
print("14. False")
print("15. True")
print("16. True")
print("17. True")
print("18. True")
print("19. False")
print("20. True")
